```
using System;
using System.Collections.Generic;

//
//

public class Mediator : IMediator
{
    List<IUzytkownik> uzytkownicy;

    public Mediator()
    {
        uzytkownicy = new List<IUzytkownik>();
    }

     public void WyslijWiadomosc(string wiadomosc, IUzytkownik nadawca)
    {
        foreach(var uzytkownik in uzytkownicy)
        {
          uzytkownik.OdbierzWiadomosc(wiadomosc);
        }
    }

    public void DodajUzytkownika(IUzytkownik uzytkownik)
    {
        uzytkownicy.Add(uzytkownik);
    }
}

public class Dev : IUzytkownik 
{
    string login;
    IMediator Mediator;

    public Dev(IMediator Mediator, string login)
    {
        this.login = login;
        this.Mediator = Mediator;
    }

    public void WyslijWiadomosc(string wiadomosc)
    {
        Mediator.WyslijWiadomosc(wiadomosc, this);
    }

    public void OdbierzWiadomosc(string wiadomosc)
    {
        Console.WriteLine("Programista " + login + " otrzymal wiadomosc: " + wiadomosc);
    }
}

//
//
//

public class Klient : IUzytkownik
{
    string login;
    IMediator Mediator;
    public Klient(IMediator Mediator, string login)
    {
        this.login = login;
        this.Mediator = Mediator;
    }

    public void WyslijWiadomosc(string wiadomosc)
    {
        Mediator.WyslijWiadomosc(wiadomosc, this);
    }
        
    public void OdbierzWiadomosc(string wiadomosc)
    {
        Console.WriteLine("uzytkownik " + login + " otrzymal wiadomosc: " + wiadomosc);
    }
}

class Program
{
  static void Main(string[] args) 
  {
    
    IMediator mediator = new Mediator();
    IMediator mediator_two = new Mediator();
    //
    IUzytkownik ania = new Klient(mediator, "Ania");
    IUzytkownik nakamoto = new Dev(mediator, "Nakamoto");
    IUzytkownik geohot = new Dev(mediator_two,"Geohot");
    // 
    //
    mediator.DodajUzytkownika(nakamoto);
    mediator.DodajUzytkownika(geohot);

    mediator_two.DodajUzytkownika(ania);
    mediator_two.DodajUzytkownika(nakamoto);

    ania.WyslijWiadomosc("Prosze natychmiast wprowadzic poprawki na produkcje.");
    geohot.WyslijWiadomosc("Czekam az Nakamoto zaparzy kawe...");
  }
}

public interface IMediator
{
  public void WyslijWiadomosc(string wiadomosc, IUzytkownik nadawca);
  public void DodajUzytkownika(IUzytkownik uzytkownik);
}

public interface IUzytkownik
{
  public void WyslijWiadomosc(string wiadomosc);
  public void OdbierzWiadomosc(string wiadomosc);
}
```